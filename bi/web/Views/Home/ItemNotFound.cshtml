@{
    Layout = null;
    var globalAppSettings = _globalAppSettings;
    var faviconLogo = globalAppSettings.SystemSettings.FavIcon;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var isSlideshow = Convert.ToBoolean(requestUrl.Query.ToLower().Contains("isslideshow"));
    var cdnLink = (Context.Request.PathBase.ToString().Equals("/") ? string.Empty : Context.Request.PathBase.ToString()) + ServerAppConfig.AppSettings.EndPoints.CdnLink + "/cdn/images";
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    if (ServerAppConfig.IsSelfHosted)
    {
        cdnLink = (Context.Request.PathBase.ToString().Equals("/") ? string.Empty : Context.Request.PathBase.ToString()) + ServerAppConfig.AppSettings.EndPoints.CdnLink + "/cdn/images";
        dashboardServerResourceUrl = Context.Request.PathBase + ServerAppConfig.AppSettings.EndPoints.CdnLink;
    }
    else
    {
        cdnLink = @GlobalAppSettings.CdnDomain;
        dashboardServerResourceUrl = ServerAppConfig.AppSettings.EndPoints.CdnLink.TrimEnd('/');
    }

    if(ViewBag.Item == ItemType.Slideshow.ToString())
    {
        ViewBag.Title = "[[[Slideshow Not Found]]] - ";
    }
    else if (ViewBag.Item == ItemType.Datasource.ToString())
    {
        ViewBag.Title = "[[[Datasource Not Found]]] - ";
    }
    else if (ViewBag.Item == "user")
    {
        ViewBag.Title = "[[[User Not Found]]] - ";
    }
    else if (ViewBag.Item == "group")
    {
        ViewBag.Title = "[[[Group Not Found]]] - ";
    }
    else if (ViewBag.Item == "pinboard")
    {
        ViewBag.Title = "[[[Pinboard Not Found]]] - ";
    }
    else if (ViewBag.ItemType == null)
    {
        ViewBag.Title = "[[[Dashboard Not Found]]] - ";
    }
    else
    {
        ViewBag.Title = "[[[No Dashboards Found]]] - ";
    }
    ViewBag.Title += globalAppSettings.SystemSettings.OrganizationName;
}
<!DOCTYPE html>
<html class="dashboard-server">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/theme/light.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.css" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, dashboardServerResourceUrl)" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/theme/light.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, dashboardServerResourceUrl)" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.min.js"></script>
    </environment>

    <script>
        var setPermissionUrl = "@Url.Action("SetCookieStoragePermission", "Accounts")";
    </script>
    @await Html.PartialAsync("~/Views/Shared/_LoaderIcon.cshtml")

<link rel="icon" href="@faviconLogo" onerror="if (this.href !== null && this.href.toLowerCase() !== '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@IconFileNames.Favicon') this.href = '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@IconFileNames.Favicon';" />
</head>
<body class="error-full-content">
    <div class="error-page-outer">
        <div class="error-page-content">
            <div class="error-inside">
                <div class="error-image-center-1">
                    <img src="@globalAppSettings.SystemSettings.LoginLogo" onerror="if (this.src != '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@IconFileNames.LoginLogo') this.src = '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@IconFileNames.LoginLogo';" class="error-image-1">
                </div>

                @if (ViewBag.ItemType != null)
                {
                    <div class="error-image-center-2">
                        <img src="@cdnLink/static/error-pages/v1/dashboard-not-found.svg" class="error-image-2">
                    </div>
                    <div class="error-type">[[[No dashboards found]]]</div>
                    if (ViewBag.ItemType == ItemType.Slideshow)
                    {
                        <div class="error-text">
                            [[[Sorry! This slideshow does not contain any dashboards. The dashboards may have been moved or deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                    else
                    {
                        <div class="error-text">
                            [[[Sorry! This multi-tabbed dashboard does not contain any dashboards. The dashboards may have been moved or deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }

                }
                else if (ViewBag.Item != null)
                {
                    if (ViewBag.Item == ItemType.Slideshow.ToString())
                    {
                        <div class="error-image-center-2">
                            <img src="@cdnLink/static/error-pages/v1/slideshow-not-found.svg" class="error-image-2">
                        </div>
                        <div class="error-type">[[[Slideshow not found]]]</div>
                        <div class="error-text">
                            [[[Sorry! The slideshow you’re looking for isn’t available. It may have been deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                    else if (ViewBag.Item == ItemType.Datasource.ToString())
                    {
                        <div class="error-image-center-2">
                            <img src="@cdnLink/static/error-pages/v1/datasource-not-found.svg" class="error-image-2">
                        </div>
                        <div class="error-type">[[[Data source not found]]]</div>
                        <div class="error-text">
                            [[[Sorry! The data source you’re looking for isn’t available. It may have been deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                    else if (ViewBag.Item == "user")
                    {
                        <div class="error-image-center-2">
                            <img src="@cdnLink/static/error-pages/v1/user-not-found.svg" class="error-image-2">
                        </div>
                        <div class="error-type">[[[User not found]]]</div>
                        <div class="error-text">
                            [[[Sorry! The user profile you’re looking for isn’t available. The user may have been deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                    else if (ViewBag.Item == "group")
                    {
                        <div class="error-image-center-2">
                            <img src="@cdnLink/static/error-pages/v1/group-not-found.svg" class="error-image-2">
                        </div>
                        <div class="error-type">[[[Group not found]]]</div>
                        <div class="error-text">
                            [[[Sorry! The group you’re looking for isn’t available. The group may have been deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                    else if (ViewBag.Item == "pinboard")
                    {
                        <div class="error-image-center-2">
                            <img src="@cdnLink/static/error-pages/v1/pinboard-not-found.svg" class="error-image-2">
                        </div>
                        <div class="error-type">[[[Pinboard not found]]]</div>
                        <div class="error-text">
                            [[[Sorry! The pinboard you’re looking for isn’t available. The pinboard may have been deleted.]]]<br>
                            [[[Please contact your site administrator for help.]]]
                        </div>
                    }
                }
                else
                {
                    <div class="error-image-center-2">
                        <img src="@cdnLink/static/error-pages/v1/dashboard-not-found.svg" class="error-image-2">
                    </div>
                    <div class="error-type">[[[Dashboard not found]]]</div>
                    <div class="error-text">
                        [[[Sorry! The dashboard you’re looking for isn’t available. It may have been moved or deleted.]]]<br>
                        [[[Please contact your site administrator for help.]]]
                    </div>
                }

                @if (!isSlideshow)
                {
                    <div class="take-me-back-to-home-page"><span class="error-page-cursor"><a class="error-to-beck-text-color" href="@Url.Action("Dashboards", "Dashboards")">[[[Go to home page]]]</a></span></div>
                }
            </div>
        </div>
    </div>
    @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
</body>
</html>